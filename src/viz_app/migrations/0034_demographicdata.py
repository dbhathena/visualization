# Generated by Django 2.0.6 on 2019-03-29 00:09

from django.db import migrations, models
from ..value_mappings import PARTICIPANTS

import pandas as pd
import os

# Returns a list of the files, ignoring '.files', in the given directory
# Directory is a string of the path to the directory
def get_files(directory):
    files = os.listdir(directory)
    return [x for x in files if not (x.startswith('.'))]


def populate_demographic_data(apps, schema_editor):
    directory = 'data/Demographics/pie_chart.csv'
    participants = set(PARTICIPANTS)
    DemographicData = apps.get_model('viz_app', 'DemographicData')
    df = pd.read_csv(directory, usecols=['MIT ID:',
                                         'Age (years)',
                                         'Are you current in psychotherapy? (circle one)',
                                         'Number of lifetime antidepressant medication trials',
                                         'Ethnicity',
                                         'Race (choice=White)',
                                         'Race (choice=Black, or African-American)',
                                         'Race (choice=Asian)',
                                         'Race (choice=Hawaiian or Other Pacific Islander)',
                                         'Race (choice=American Indian/Alaska Native)',
                                         'Race (choice=Other)',
                                         'Length of Current Episode (months)',
                                         'HC or MDD?',
                                         'Gender'])
    for index, row in df.iterrows():
        name = row['MIT ID:']
        if name in participants:
            print(name)
            age = row['Age (years)']
            if pd.isnull(age):
                age = -1
            else:
                age = int(age)

            study_group = row['HC or MDD?']
            if pd.isnull(study_group):
                study_group = 'missing'

            in_psychotherapy = row['Are you current in psychotherapy? (circle one)']
            if pd.isnull(in_psychotherapy):
                in_psychotherapy = None
            else:
                in_psychotherapy = in_psychotherapy == 'Yes'

            number_trials = row['Number of lifetime antidepressant medication trials']
            if pd.isnull(number_trials):
                number_trials = -1
            else:
                try:
                    number_trials = int(number_trials)
                except:
                    number_trials = -1

            current_episode_length = row['Length of Current Episode (months)']
            if pd.isnull(current_episode_length):
                current_episode_length = -1
            else:
                current_episode_length = int(current_episode_length)

            sex = row['Gender']
            if pd.isnull(sex):
                sex = 'missing'

            ethnicity = row['Ethnicity']
            is_white = row['Race (choice=White)'] == 'Checked'
            is_black = row['Race (choice=Black, or African-American)'] == 'Checked'
            is_asian = row['Race (choice=Asian)'] == 'Checked'
            is_hawaiian = row['Race (choice=Hawaiian or Other Pacific Islander)'] == 'Checked'
            is_native = row['Race (choice=American Indian/Alaska Native)'] == 'Checked'
            is_other = row['Race (choice=Other)'] == 'Checked'

            line = DemographicData(name=name,
                                   age=age,
                                   in_psychotherapy=in_psychotherapy,
                                   number_trials=number_trials,
                                   ethnicity=ethnicity,
                                   is_white=is_white,
                                   is_black_african_american=is_black,
                                   is_asian=is_asian,
                                   is_hawaiian_pacific_islander=is_hawaiian,
                                   is_american_indian_alaska_native=is_native,
                                   is_other_race=is_other,
                                   treatment_length=current_episode_length,
                                   study_group=study_group,
                                   sex=sex)
            line.save()


class Migration(migrations.Migration):

    dependencies = [
        ('viz_app', '0033_auto_20190220_2019'),
    ]

    operations = [
        migrations.CreateModel(
            name='DemographicData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('age', models.FloatField()),
                ('in_psychotherapy', models.NullBooleanField()),
                ('number_trials', models.FloatField()),
                ('ethnicity', models.CharField(max_length=50)),
                ('is_white', models.BooleanField()),
                ('is_black_african_american', models.BooleanField()),
                ('is_asian', models.BooleanField()),
                ('is_hawaiian_pacific_islander', models.BooleanField()),
                ('is_american_indian_alaska_native', models.BooleanField()),
                ('is_other_race', models.BooleanField()),
                ('treatment_length', models.FloatField()),
                ('study_group', models.CharField(choices=[('MDD', 'Major Depressive Disorder'), ('HC', 'Healthy Control'), ('missing', 'Missing')], max_length=7)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('missing', 'Missing')], max_length=7)),
            ],
        ),
        migrations.RunPython(populate_demographic_data),
    ]
